/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JFrame.Proje;

import static JFrame.Proje.Register.connect;
import static JFrame.Proje.Register.password;
import static JFrame.Proje.Register.username;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author firat
 */
public class Tables extends javax.swing.JFrame {

    public static final String username = "root";
    public static final String password = "sundayman";
    public static final String connect = "jdbc:mysql://localhost:3306/lives";
    Connection sqlConn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    Lives l = new Lives();

    /**
     * Creates new form Tables
     */
    public Tables() {
        initComponents();

    }

    class Lives {
        //Canlılar Classı
        String name;
        String latin;
        String live_class;
        String cell_type;
        String feed;
        String o2;
        String move;
        String reproductive;

        public String getName() {
            return name;
        }

        public void setName(String name) {
            this.name = name;
        }

        public String getLatin() {
            return latin;
        }

        public void setLatin(String latin) {
            this.latin = latin;
        }

        public String getLive_class() {
            return live_class;
        }

        public void setLive_class(String live_class) {
            this.live_class = live_class;
        }

        public String getCell_type() {
            return cell_type;
        }

        public void setCell_type(String cell_type) {
            this.cell_type = cell_type;
        }

        public String getFeed() {
            return feed;
        }

        public void setFeed(String feed) {
            this.feed = feed;
        }

        public String getO2() {
            return o2;
        }

        public void setO2(String o2) {
            this.o2 = o2;
        }

        public String getMove() {
            return move;
        }

        public void setMove(String move) {
            this.move = move;
        }

        public String getReproductive() {
            return reproductive;
        }

        public void setReproductive(String reproductive) {
            this.reproductive = reproductive;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1_radio = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        live_reproductive = new javax.swing.JComboBox<>();
        live_name = new javax.swing.JTextField();
        live_latin = new javax.swing.JTextField();
        j_live_class = new javax.swing.JComboBox<>();
        live_pro = new javax.swing.JRadioButton();
        live_oko = new javax.swing.JRadioButton();
        live_feed = new javax.swing.JComboBox<>();
        live_o2 = new javax.swing.JComboBox<>();
        live_move = new javax.swing.JComboBox<>();
        lives_reset_all = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        exit_bt = new javax.swing.JButton();
        lives_delete = new javax.swing.JButton();
        lives_search = new javax.swing.JTextField();
        show_bt = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        lives_name_search = new javax.swing.JButton();
        search_combo = new javax.swing.JComboBox<>();
        info_bt = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        users_delete = new javax.swing.JButton();
        exit_user_bt = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        users_search_text = new javax.swing.JTextField();
        show_user_bt = new javax.swing.JButton();
        search_user_bt = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        insert_table_bt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setBackground(new java.awt.Color(255, 51, 51));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(169, 97, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Latin Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 51, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Living Organisms Kingdoms:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(35, 29, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Cell Structure:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 37, 0, 0);
        jPanel1.add(jLabel7, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Respiration:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(26, 58, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Transport:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 64, 0, 0);
        jPanel1.add(jLabel5, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Nutrition:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 63, 0, 0);
        jPanel1.add(jLabel6, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Reproduction:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(34, 74, 0, 0);
        jPanel1.add(jLabel8, gridBagConstraints);

        live_reproductive.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fragmentation Reproduciton", "Vegetative Reproduciton", "Budding Reproduciton", "Binary Fission", "Sporogenesis Reproduction", "Parthenogenesis Reproduction", "Sexual Reproduction" }));
        live_reproductive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                live_reproductiveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 19;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = 201;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = -7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(34, 18, 0, 0);
        jPanel1.add(live_reproductive, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 97;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 96;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(169, 2, 0, 0);
        jPanel1.add(live_name, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 77;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 96;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 10, 0, 0);
        jPanel1.add(live_latin, gridBagConstraints);

        j_live_class.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Animals Kingdoms", "Plants Kingdoms", "Fungi Kingdoms ", "Protists Kingdoms ", "Prokaryotes Kingdoms", "Monera Kingdoms" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 35;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 185;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = -9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(35, 10, 0, 0);
        jPanel1.add(j_live_class, gridBagConstraints);

        buttonGroup1_radio.add(live_pro);
        live_pro.setSelected(true);
        live_pro.setText("Prokaryote Cell");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 53;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(49, 12, 0, 0);
        jPanel1.add(live_pro, gridBagConstraints);

        buttonGroup1_radio.add(live_oko);
        live_oko.setText("Eukaryot Cell");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        jPanel1.add(live_oko, gridBagConstraints);

        live_feed.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Autotrophic Nutrition", "Heterotrophic Nutrition" }));
        live_feed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                live_feedActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 137;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 6, 0, 0);
        jPanel1.add(live_feed, gridBagConstraints);

        live_o2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aerobic Respiration", "Anaerobic Respiration" }));
        live_o2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                live_o2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 184;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(26, 11, 0, 0);
        jPanel1.add(live_o2, gridBagConstraints);

        live_move.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active Transport", "Passive Transport" }));
        live_move.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                live_moveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 160;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 34;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 8, 0, 0);
        jPanel1.add(live_move, gridBagConstraints);

        lives_reset_all.setText("Reset");
        lives_reset_all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lives_reset_allActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 19;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.gridwidth = 110;
        gridBagConstraints.ipadx = 43;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(34, 3, 0, 0);
        jPanel1.add(lives_reset_all, gridBagConstraints);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Latin Name", "Living Organisms Kingdoms", "Cell Structureı", "Nutrition", "Respiration", "Transport", "Reproduction"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        exit_bt.setText("Exit");
        exit_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_btActionPerformed(evt);
            }
        });

        lives_delete.setText("Delete");
        lives_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lives_deleteActionPerformed(evt);
            }
        });

        show_bt.setText("Show Table");
        show_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show_btActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel11.setText("Search:");

        lives_name_search.setText("Search");
        lives_name_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lives_name_searchActionPerformed(evt);
            }
        });

        search_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name", "Latin_Name", "Lives_Class", "Cell_Structure", "Nutrition", "Respiratory", "Move", "Reproductive", " " }));

        info_bt.setText("Go Information Box");
        info_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                info_btActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1432, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(search_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lives_name_search, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lives_search, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(98, 98, 98)
                .addComponent(lives_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(show_bt, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(157, 157, 157)
                .addComponent(info_bt, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(160, 160, 160)
                .addComponent(exit_bt, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lives_search, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 29, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lives_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lives_name_search, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exit_bt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(info_bt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(show_bt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Organisms", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Name Username", "E-Mail", "Age", "Profession", "Student"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        users_delete.setText("Delete");
        users_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                users_deleteActionPerformed(evt);
            }
        });

        exit_user_bt.setText("Exit");
        exit_user_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_user_btActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Search Bar:");

        show_user_bt.setText("Show Table");
        show_user_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show_user_btActionPerformed(evt);
            }
        });

        search_user_bt.setText("Search");
        search_user_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_user_btActionPerformed(evt);
            }
        });

        jButton1.setText("Go Information Box");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1432, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(search_user_bt, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(users_search_text, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(141, 141, 141)
                        .addComponent(show_user_bt, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(155, 155, 155)
                        .addComponent(users_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(139, 139, 139)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exit_user_bt, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(users_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exit_user_bt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(users_search_text, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(show_user_bt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(search_user_bt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 155, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Users", jPanel3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 220;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 19;
        gridBagConstraints.ipadx = 136;
        gridBagConstraints.ipady = 29;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(126, 26, 0, 0);
        jPanel1.add(jTabbedPane1, gridBagConstraints);

        insert_table_bt.setText("Add");
        insert_table_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insert_table_btActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.ipadx = 55;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(34, 52, 0, 0);
        jPanel1.add(insert_table_bt, gridBagConstraints);

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exit_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_btActionPerformed



        // TODO add your handling code here:
        //Frame'den çıkma işlemi
        int input = JOptionPane.showConfirmDialog(null,
                "Confirm if you want to exit", "Are you sure", JOptionPane.YES_NO_OPTION);
        if (input == 0) {
            Register register_frame = new Register();
            register_frame.show();
            dispose();
        }
    }//GEN-LAST:event_exit_btActionPerformed

    private void exit_user_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_user_btActionPerformed

        // TODO add your handling code here:
         //Frame'den çıkma işlemi
        int input = JOptionPane.showConfirmDialog(null,
                "Confirm if you want to exit", "Are you sure", JOptionPane.YES_NO_OPTION);
        if (input == 0) {
            Register register_frame = new Register();
            register_frame.show();
            dispose();
        }
    }//GEN-LAST:event_exit_user_btActionPerformed

    private void live_feedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_live_feedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_live_feedActionPerformed

    private void live_moveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_live_moveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_live_moveActionPerformed

    private void live_o2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_live_o2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_live_o2ActionPerformed

    private void live_reproductiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_live_reproductiveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_live_reproductiveActionPerformed

    private void insert_table_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insert_table_btActionPerformed

        // TODO add your handling code here:
        //Inputlar boş değilse inputları lives classından oluşan objenin özleliklerine ata
        if (live_name.getText().equals("") || live_latin.getText().equals("") || (!(live_oko.isSelected()) & !(live_pro.isSelected()))) {
            JOptionPane.showMessageDialog(null, "Fill all area", "Fill!", JOptionPane.ERROR_MESSAGE);
        } else {

            l.setName(live_name.getText());
            l.setLatin(live_latin.getText());
            l.setLive_class((String) j_live_class.getSelectedItem());

            if (live_pro.isSelected()) {
                l.cell_type = "Prokaryot Hücre";
            } else {
                l.cell_type = "Ökaryot Hücre";
            }
            l.setFeed((String) live_feed.getSelectedItem());
            l.setO2((String) live_o2.getSelectedItem());
            l.setMove((String) live_move.getSelectedItem());
            l.setReproductive((String) live_reproductive.getSelectedItem());

            try {
                //database veriyi ekle
                Class.forName("com.mysql.jdbc.Driver");
                sqlConn = DriverManager.getConnection(connect, username, password);
                pst = (PreparedStatement) sqlConn.prepareStatement("insert into lives_table(Name,Latin_Name,Lives_Class,Cell_Structure,Nutrition,Respiratory,Move,Reproductive)" + "values(?,?,?,?,?,?,?,?)");

                pst.setString(1, l.getName());
                pst.setString(2, l.getLatin());
                pst.setString(3, l.getLive_class());
                pst.setString(4, l.getCell_type());
                pst.setString(5, l.getFeed());
                pst.setString(6, l.getO2());
                pst.setString(7, l.getMove());
                pst.setString(8, l.getReproductive());

                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Live Recorded!");
                show_table_lives();

            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_insert_table_btActionPerformed
    // Inputların değerlerini sıfırla
    private void lives_reset_allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lives_reset_allActionPerformed
        // TODO add your handling code here:
        live_name.setText("");
        live_latin.setText("");
        j_live_class.setSelectedIndex(0);
        live_pro.setSelected(true);
        live_feed.setSelectedIndex(0);
        live_move.setSelectedIndex(0);
        live_reproductive.setSelectedIndex(0);
        live_o2.setSelectedIndex(0);


    }//GEN-LAST:event_lives_reset_allActionPerformed
    //databaseden veri sil
    private void lives_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lives_deleteActionPerformed
        // TODO add your handling code here:

        DefaultTableModel RecordTable = (DefaultTableModel) jTable1.getModel();
        int s_rows = jTable1.getSelectedRow();

        try {

            int id = Integer.parseInt(RecordTable.getValueAt(s_rows, 0).toString());

            int input = JOptionPane.showConfirmDialog(null,
                    "Confirm if you want delete select rows", "Are you sure", JOptionPane.YES_NO_OPTION);
            if (input == 0) {
                Class.forName("com.mysql.jdbc.Driver");
                sqlConn = DriverManager.getConnection(connect, username, password);
//            pst = (PreparedStatement) sqlConn.prepareStatement("update student data set Name=?,"
//                    + "Latin_Name=?,Lives_Class=?,Cell_Structure=?,Nutrition=?,Respiratory=?,Move=?,Reproductive=? where ID = ?");
                pst = (PreparedStatement) sqlConn.prepareStatement("delete from lives_table where id = ?");
                pst.setInt(1, id);
                pst.executeUpdate();
            }

        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(Tables.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(null, "Live deleted");
        try {
            show_table_lives();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Tables.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_lives_deleteActionPerformed
    //tablodan seçilen indexin değerlerini inputta göster
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel recordTable = (DefaultTableModel) jTable1.getModel();
        int selected_row = jTable1.getSelectedRow();

        live_name.setText(recordTable.getValueAt(selected_row, 1).toString());
        live_latin.setText(recordTable.getValueAt(selected_row, 2).toString());
        j_live_class.setSelectedItem(recordTable.getValueAt(selected_row, 3).toString());
        if (recordTable.getValueAt(selected_row, 4).equals("Prokaryot Hücre")) {

            live_pro.setSelected(true);
            live_oko.setSelected(false);

        }
        if (recordTable.getValueAt(selected_row, 4).equals("Ökaryot Hücre")) {
            live_pro.setSelected(false);
            live_oko.setSelected(true);

        }

        live_feed.setSelectedItem(recordTable.getValueAt(selected_row, 5).toString());
        live_o2.setSelectedItem(recordTable.getValueAt(selected_row, 6).toString());
        live_move.setSelectedItem(recordTable.getValueAt(selected_row, 7).toString());
        live_reproductive.setSelectedItem(recordTable.getValueAt(selected_row, 8).toString());


    }//GEN-LAST:event_jTable1MouseClicked
    //Lives Databaseini göster
    private void show_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_btActionPerformed

        try {
            // TODO add your handling code here:
            show_table_lives();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Tables.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_show_btActionPerformed
    //Databasede arama yap
    private void lives_name_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lives_name_searchActionPerformed

        String s = (String) search_combo.getSelectedItem();
        String query = "select * from lives_table where " +s+"=?";
        try {
            pst = (PreparedStatement) sqlConn.prepareStatement(query);
            pst.setString(1,lives_search.getText() );
            ResultSet rs = pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
//            if (rs.next() == false){
//                JOptionPane.showMessageDialog(null, "Could Not Found");
//            }
//            else
//            {
//            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
//            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Tables.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
       



    }//GEN-LAST:event_lives_name_searchActionPerformed
    // user databaseini göster
    private void show_user_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_user_btActionPerformed

        try {
            // TODO add your handling code here:
            show_users();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tables.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Tables.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_show_user_btActionPerformed
    //Users databaseinden veri sil
    private void users_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_users_deleteActionPerformed

        // TODO add your handling code here:
        DefaultTableModel RecordTable = (DefaultTableModel) jTable2.getModel();
        int s_rows = jTable2.getSelectedRow();

        try {

            int id = Integer.parseInt(RecordTable.getValueAt(s_rows, 0).toString());

            int input = JOptionPane.showConfirmDialog(null,
                    "Confirm if you want delete select rows", "Are you sure", JOptionPane.YES_NO_OPTION);
            if (input == 0) {
                Class.forName("com.mysql.jdbc.Driver");
                sqlConn = DriverManager.getConnection(connect, username, password);
//            pst = (PreparedStatement) sqlConn.prepareStatement("update student data set Name=?,"
//                    + "Latin_Name=?,Lives_Class=?,Cell_Structure=?,Nutrition=?,Respiratory=?,Move=?,Reproductive=? where ID = ?");
                pst = (PreparedStatement) sqlConn.prepareStatement("delete from users.users_table where id = ?");
                pst.setInt(1, id);
                pst.executeUpdate();
                show_users();
            }

        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(Tables.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(null, "User deleted");
        try {
            show_table_lives();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Tables.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_users_deleteActionPerformed
    //users databaseden arama yapma
    private void search_user_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_user_btActionPerformed

        DefaultTableModel RecordTable = (DefaultTableModel) jTable2.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(RecordTable);
        jTable2.setRowSorter(trs);
        String user_textname = users_search_text.getText();
        trs.setRowFilter(RowFilter.regexFilter(user_textname));

    }//GEN-LAST:event_search_user_btActionPerformed
    //Library frame git
    private void info_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_info_btActionPerformed
        // TODO add your handling code here:
        Library lb = new Library();
        lb.show();
        dispose();
    }//GEN-LAST:event_info_btActionPerformed
    //Library frame git
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Library lb = new Library();
        lb.show();
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    //Jtable'e Lives databasedeki veriyi yazdır
    public void show_table_lives() throws ClassNotFoundException, SQLException {
        Class.forName("com.mysql.jdbc.Driver");
        sqlConn = DriverManager.getConnection(connect, username, password);
        pst = (PreparedStatement) sqlConn.prepareStatement("select * from lives_table");

        rs = pst.executeQuery();
        ResultSetMetaData StData = rs.getMetaData();
        int q = StData.getColumnCount();

        DefaultTableModel recordTable = (DefaultTableModel) jTable1.getModel();
        recordTable.setRowCount(0);

        while (rs.next()) {

            Vector columuData = new Vector();
            for (int i = 1; i < q; i++) {
                columuData.add(rs.getInt("ID"));
                columuData.add(rs.getString("Name"));
                columuData.add(rs.getString("Latin_Name"));
                columuData.add(rs.getString("Lives_Class"));
                columuData.add(rs.getString("Cell_Structure"));
                columuData.add(rs.getString("Nutrition"));
                columuData.add(rs.getString("Respiratory"));
                columuData.add(rs.getString("Move"));
                columuData.add(rs.getString("Reproductive"));

            }
            recordTable.addRow(columuData);

        }

    }
    //Jtable'e Users databasedeki veriyi yazdır
    public void show_users() throws ClassNotFoundException, SQLException {
        Class.forName("com.mysql.jdbc.Driver");
        sqlConn = DriverManager.getConnection(connect, username, password);
        String query = "select * from users.users_table";
        pst = sqlConn.prepareStatement(query);
        rs = pst.executeQuery();
        ResultSetMetaData StData = rs.getMetaData();
        int q = StData.getColumnCount();

        DefaultTableModel recordTable = (DefaultTableModel) jTable2.getModel();
        recordTable.setRowCount(0);

        while (rs.next()) {

            Vector columuData = new Vector();
            for (int i = 1; i < q; i++) {
                columuData.add(rs.getInt("ID"));
                columuData.add(rs.getString("Name_surname"));
                columuData.add(rs.getString("E_mail"));
                columuData.add(rs.getInt("Age"));
                columuData.add(rs.getString("Profession"));
                columuData.add(rs.getString("Student"));

            }
            recordTable.addRow(columuData);

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tables().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1_radio;
    private javax.swing.JButton exit_bt;
    private javax.swing.JButton exit_user_bt;
    private javax.swing.JButton info_bt;
    private javax.swing.JButton insert_table_bt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    public javax.swing.JTable jTable2;
    private javax.swing.JComboBox<String> j_live_class;
    private javax.swing.JComboBox<String> live_feed;
    private javax.swing.JTextField live_latin;
    private javax.swing.JComboBox<String> live_move;
    private javax.swing.JTextField live_name;
    private javax.swing.JComboBox<String> live_o2;
    private javax.swing.JRadioButton live_oko;
    private javax.swing.JRadioButton live_pro;
    private javax.swing.JComboBox<String> live_reproductive;
    private javax.swing.JButton lives_delete;
    private javax.swing.JButton lives_name_search;
    private javax.swing.JButton lives_reset_all;
    private javax.swing.JTextField lives_search;
    private javax.swing.JComboBox<String> search_combo;
    private javax.swing.JButton search_user_bt;
    private javax.swing.JButton show_bt;
    private javax.swing.JButton show_user_bt;
    private javax.swing.JButton users_delete;
    private javax.swing.JTextField users_search_text;
    // End of variables declaration//GEN-END:variables
}
